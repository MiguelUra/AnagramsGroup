[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jonaa\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jonaa\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 13.0.1)
[debug]       Load.loadUnit: plugins took 94.7945ms
[debug]       Load.loadUnit: defsScala took 0.3724ms
[debug] [Loading] Scanning directory C:\Users\jonaa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jonaa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.4579 ms
[debug]           Load.resolveProject(global-plugins) took 60.0016ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\jonaa\.sbt\1.0\plugins, plugins: List(<none>))) took 96.687ms
[debug] [Loading] Done in C:\Users\jonaa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 120.5621ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2116ms
[debug]     Load.loadUnit(file:/C:/Users/jonaa/.sbt/1.0/plugins/, ...) took 227.9288ms
[debug]   Load.apply: load took 394.3545ms
[debug]   Load.apply: resolveProjects took 5.6471ms
[debug]   Load.apply: finalTransforms took 64.4193ms
[debug]   Load.apply: config.delegates took 13.8218ms
[debug]   Load.apply: Def.make(settings)... took 605.0509ms
[debug]   Load.apply: structureIndex took 150.3032ms
[debug]   Load.apply: mkStreams took 1.8645ms
[info] loading global plugins from C:\Users\jonaa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3381.6075ms
[debug]           Load.loadUnit: plugins took 40.8078ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup\project
[debug]             Load.loadUnit: mkEval took 9.6875ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4662 ms
[info] loading settings for project anagramsgroup-build from idea.sbt ...
[debug]               Load.resolveProject(anagramsgroup-build) took 3.7166ms
[debug]             Load.loadTransitive: finalizeProject(Project(id anagramsgroup-build, base: D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup\project, plugins: List(<none>))) took 6.8503ms
[debug] [Loading] Done in D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup\project, returning: (anagramsgroup-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3356.6006ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.3631ms
[debug]         Load.loadUnit(file:/D:/Users/Jonaa/Documents/INTEC/Trimestre%238/Tendencias/AnagramsGroup/project/, ...) took 3405.0047ms
[debug]       Load.apply: load took 3406.5445ms
[debug]       Load.apply: resolveProjects took 0.121ms
[debug]       Load.apply: finalTransforms took 17.5914ms
[debug]       Load.apply: config.delegates took 0.6522ms
[debug]       Load.apply: Def.make(settings)... took 119.913ms
[debug]       Load.apply: structureIndex took 60.3526ms
[debug]       Load.apply: mkStreams took 0.0053ms
[info] loading project definition from D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5880.6668ms
[debug]     Load.loadUnit: defsScala took 0.0088ms
[debug] [Loading] Scanning directory D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup
[debug]       Load.loadUnit: mkEval took 0.5043ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.7023 ms
[info] loading settings for project anagramsgroup from build.sbt ...
[debug]         Load.resolveProject(anagramsgroup) took 70.1735ms
[debug]       Load.loadTransitive: finalizeProject(Project(id anagramsgroup, base: D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup, plugins: List(<none>))) took 76.8356ms
[debug] [Loading] Done in D:\Users\Jonaa\Documents\INTEC\Trimestre#8\Tendencias\AnagramsGroup, returning: (anagramsgroup)
[debug]     Load.loadUnit: loadedProjectsRaw took 3160.0111ms
[debug]     Load.loadUnit: cleanEvalClasses took 40.0346ms
[debug]   Load.loadUnit(file:/D:/Users/Jonaa/Documents/INTEC/Trimestre%238/Tendencias/AnagramsGroup/, ...) took 9082.3807ms
[debug] Load.apply: load took 9084.5925ms
[debug] Load.apply: resolveProjects took 0.1414ms
[debug] Load.apply: finalTransforms took 39.5541ms
[debug] Load.apply: config.delegates took 0.5942ms
[debug] Load.apply: Def.make(settings)... took 179.5772ms
[debug] Load.apply: structureIndex took 53.5706ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to Anangrams@ (in build file:/D:/Users/Jonaa/Documents/INTEC/Trimestre%238/Tendencias/AnagramsGroup/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62742 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62742, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Anangrams@ (in build file:/D:/Users/Jonaa/Documents/INTEC/Trimestre%238/Tendencias/AnagramsGroup/)
[debug] > Exec(idea-shell, None, None)
